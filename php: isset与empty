php isset()与empty()的使用
PHP isset函数作用

isset函数是检测变量是否设置。

格式：bool isset( mixed var [, mixed var [, ...]] )

返回值：

若变量不存在则返回FALSE

若变量存在且其值为NULL，也返回FALSE

若变量存在且值不为NULL，则返回TURE

同时检查多个变量时，每个单项都符号上一条要求时才返回TRUE,否则结果为FALSE

如果已经使用unset()释放了一个变量之后，它将不再是isset()。若使用isset()测试一个被设置成NULL的变量，将返回FALSE。同时要注意的是一个NULL字节（"\0"）并不等同于PHP的NULL常数。

警告：isset()只能用于变量，因为传递任何其它参数都将造成解析错误。若想检测常量是否已设置，可使用defined()函数。

复制代码
 1 <?php
 2 
 3 $a = array ('test' => 1, 'hello' => NULL);
 4 
 5 var_dump( isset ($a['test') ); // TRUE
 6 var_dump( isset ($a['foo') ); // FALSE
 7 var_dump( isset ($a['hello') ); // FALSE
 8 
 9 // 'hello' 等于 NULL，所以被认为是未赋值的。
10 // 如果想检测 NULL 键值，可以试试下边的方法。
11 var_dump( array_key_exists('hello', $a) ); // TRUE
12 
13 ?>
复制代码
PHP的empty()函数 

格式：bool empty(mixed var)

功能：检查一个变量是否为空

返回值：

若变量不存在则返回TRUE

若变量存在且值为""、0、"0"、NULL、、FALSE、array()、var $var;以及没有任何属性的对象，则返回TURE

若变量存在且值不为""、0、"0"、NULL、、FALSE、array()、var $var;以及没有任何属性的对象，则返回FALSE

empty()只能用于变量，传递任何其它参数都将造成Paser error而终止运行

检测常量是否已设置可使用defined()函数。

empty() 与 isset() 的一个简单比较

复制代码
 1 <?php 
 2 $var = 0; 
 3 // 结果为 true，因为 $var 为空 
 4 if (empty($var)) { 
 5 echo '$var is either 0 or not set at all'; 
 6 } 
 7 // 结果为 false，因为 $var 已设置 
 8 if (!isset($var)) { 
 9 echo '$var is not set at all'; 
10 } 
11 ?> 
复制代码
当要判断一个变量是否已经声明的时候可以使用isset函数

当要判断一个变量是否已经赋予数据且补位空，可以用empty函数

当要判断一个变量存在且不为空，先isset函数，再用empty函数
